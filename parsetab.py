
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALDISTINTOleftMENORMAYORMENORIGUALMAYORIGUALleftSUMARESTAleftMULTDIVrightNOAND ASIGNACION BOOLEANO BREAK COMA DISTINTO DIV ENTERO ESCRIBIR FALSO FLOTANTE FSI HACER HASTA ID IGUAL LEER LLAVDER LLAVIZQ MAYOR MAYORIGUAL MENOR MENORIGUAL MIENTRAS MULT NO NUMERO NUMERO_HEX OR PARDER PARIZQ POTENCIA PROGRAMA PUNTOCOMA RESTA SI SINO SUMA THEN VERDADEROprogram : PROGRAMA LLAVIZQ instrucciones LLAVDERinstrucciones : instrucciones instruccion\n                     | instruccioninstruccion : declaracion\n                   | asignacion\n                   | control\n                   | lectura\n                   | escrituradeclaracion : ENTERO lista_ids PUNTOCOMA\n                   | FLOTANTE lista_ids PUNTOCOMA\n                   | BOOLEANO lista_ids PUNTOCOMAexpresion : VERDADERO\n                 | FALSOinstruccion : BREAK PUNTOCOMAexpresion : NO expresionexpresion : expresion AND expresion\n                 | expresion OR expresionexpresion : expresion POTENCIA expresionlista_ids : lista_ids COMA ID\n                 | IDasignacion : ID ASIGNACION expresion PUNTOCOMAexpresion : expresion SUMA expresion\n                 | expresion RESTA expresion\n                 | expresion MULT expresion\n                 | expresion DIV expresionexpresion : PARIZQ expresion PARDERexpresion : NUMERO\n                 | NUMERO_HEXexpresion : IDcontrol : MIENTRAS PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERcontrol : SI PARIZQ expresion PARDER THEN LLAVIZQ instrucciones LLAVDER fsifsi : FSI\n           | SINO LLAVIZQ instrucciones LLAVDER FSIcontrol : HACER LLAVIZQ instrucciones LLAVDER HASTA PARIZQ expresion PARDER PUNTOCOMAlectura : LEER ID PUNTOCOMAescritura : ESCRIBIR ID PUNTOCOMAexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion IGUAL expresion\n                 | expresion DISTINTO expresion'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,21,],[0,-1,]),'LLAVIZQ':([2,18,68,86,98,],[3,31,85,89,100,]),'BREAK':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[11,11,-3,-4,-5,-6,-7,-8,-2,-14,11,-9,-10,-11,11,-35,-36,-21,11,11,11,-30,11,-31,-32,-34,11,11,-33,]),'ENTERO':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[12,12,-3,-4,-5,-6,-7,-8,-2,-14,12,-9,-10,-11,12,-35,-36,-21,12,12,12,-30,12,-31,-32,-34,12,12,-33,]),'FLOTANTE':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[13,13,-3,-4,-5,-6,-7,-8,-2,-14,13,-9,-10,-11,13,-35,-36,-21,13,13,13,-30,13,-31,-32,-34,13,13,-33,]),'BOOLEANO':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[14,14,-3,-4,-5,-6,-7,-8,-2,-14,14,-9,-10,-11,14,-35,-36,-21,14,14,14,-30,14,-31,-32,-34,14,14,-33,]),'ID':([3,4,5,6,7,8,9,10,12,13,14,19,20,22,23,28,29,30,31,34,35,36,37,42,43,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,85,88,89,90,91,92,96,97,99,100,101,103,],[15,15,-3,-4,-5,-6,-7,-8,25,25,25,32,33,-2,-14,38,38,38,15,-9,51,-10,-11,38,38,15,-35,-36,-21,38,38,38,38,38,38,38,38,38,38,38,38,38,15,15,15,38,-30,15,-31,-32,-34,15,15,-33,]),'MIENTRAS':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[16,16,-3,-4,-5,-6,-7,-8,-2,-14,16,-9,-10,-11,16,-35,-36,-21,16,16,16,-30,16,-31,-32,-34,16,16,-33,]),'SI':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[17,17,-3,-4,-5,-6,-7,-8,-2,-14,17,-9,-10,-11,17,-35,-36,-21,17,17,17,-30,17,-31,-32,-34,17,17,-33,]),'HACER':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[18,18,-3,-4,-5,-6,-7,-8,-2,-14,18,-9,-10,-11,18,-35,-36,-21,18,18,18,-30,18,-31,-32,-34,18,18,-33,]),'LEER':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[19,19,-3,-4,-5,-6,-7,-8,-2,-14,19,-9,-10,-11,19,-35,-36,-21,19,19,19,-30,19,-31,-32,-34,19,19,-33,]),'ESCRIBIR':([3,4,5,6,7,8,9,10,22,23,31,34,36,37,48,49,50,52,85,88,89,91,92,96,97,99,100,101,103,],[20,20,-3,-4,-5,-6,-7,-8,-2,-14,20,-9,-10,-11,20,-35,-36,-21,20,20,20,-30,20,-31,-32,-34,20,20,-33,]),'LLAVDER':([4,5,6,7,8,9,10,22,23,34,36,37,48,49,50,52,88,91,92,96,97,99,101,103,],[21,-3,-4,-5,-6,-7,-8,-2,-14,-9,-10,-11,70,-35,-36,-21,91,-30,94,-31,-32,-34,102,-33,]),'PUNTOCOMA':([11,24,25,26,27,32,33,38,39,40,41,44,45,51,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,95,],[23,34,-20,36,37,49,50,-29,52,-12,-13,-27,-28,-19,-15,-16,-17,-18,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,99,]),'ASIGNACION':([15,],[28,]),'PARIZQ':([16,17,28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,87,90,],[29,30,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,90,43,]),'COMA':([24,25,26,27,51,],[35,-20,35,35,-19,]),'VERDADERO':([28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,90,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FALSO':([28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,90,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'NO':([28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,90,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NUMERO':([28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,90,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NUMERO_HEX':([28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,90,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'AND':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,53,-12,-13,-27,-28,53,53,-15,53,-16,53,53,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,53,]),'OR':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,54,-12,-13,-27,-28,54,54,-15,54,-16,-17,54,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,54,]),'POTENCIA':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,55,-12,-13,-27,-28,55,55,-15,55,-16,-17,55,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,55,]),'SUMA':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,56,-12,-13,-27,-28,56,56,-15,56,56,56,56,-22,-23,-24,-25,56,56,56,56,56,56,-26,56,]),'RESTA':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,57,-12,-13,-27,-28,57,57,-15,57,57,57,57,-22,-23,-24,-25,57,57,57,57,57,57,-26,57,]),'MULT':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,58,-12,-13,-27,-28,58,58,-15,58,58,58,58,58,58,-24,-25,58,58,58,58,58,58,-26,58,]),'DIV':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,59,-12,-13,-27,-28,59,59,-15,59,59,59,59,59,59,-24,-25,59,59,59,59,59,59,-26,59,]),'MENOR':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,60,-12,-13,-27,-28,60,60,-15,60,60,60,60,-22,-23,-24,-25,-37,-38,-39,-40,60,60,-26,60,]),'MAYOR':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,61,-12,-13,-27,-28,61,61,-15,61,61,61,61,-22,-23,-24,-25,-37,-38,-39,-40,61,61,-26,61,]),'MENORIGUAL':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,62,-12,-13,-27,-28,62,62,-15,62,62,62,62,-22,-23,-24,-25,-37,-38,-39,-40,62,62,-26,62,]),'MAYORIGUAL':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,63,-12,-13,-27,-28,63,63,-15,63,63,63,63,-22,-23,-24,-25,-37,-38,-39,-40,63,63,-26,63,]),'IGUAL':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,64,-12,-13,-27,-28,64,64,-15,64,64,64,64,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,64,]),'DISTINTO':([38,39,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,65,-12,-13,-27,-28,65,65,-15,65,65,65,65,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,65,]),'PARDER':([38,40,41,44,45,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,],[-29,-12,-13,-27,-28,68,69,-15,84,-16,-17,-18,-22,-23,-24,-25,-37,-38,-39,-40,-41,-42,-26,95,]),'THEN':([69,],[86,]),'HASTA':([70,],[87,]),'FSI':([94,102,],[97,103,]),'SINO':([94,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instrucciones':([3,31,85,89,100,],[4,48,88,92,101,]),'instruccion':([3,4,31,48,85,88,89,92,100,101,],[5,22,5,22,5,22,5,22,5,22,]),'declaracion':([3,4,31,48,85,88,89,92,100,101,],[6,6,6,6,6,6,6,6,6,6,]),'asignacion':([3,4,31,48,85,88,89,92,100,101,],[7,7,7,7,7,7,7,7,7,7,]),'control':([3,4,31,48,85,88,89,92,100,101,],[8,8,8,8,8,8,8,8,8,8,]),'lectura':([3,4,31,48,85,88,89,92,100,101,],[9,9,9,9,9,9,9,9,9,9,]),'escritura':([3,4,31,48,85,88,89,92,100,101,],[10,10,10,10,10,10,10,10,10,10,]),'lista_ids':([12,13,14,],[24,26,27,]),'expresion':([28,29,30,42,43,53,54,55,56,57,58,59,60,61,62,63,64,65,90,],[39,46,47,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,93,]),'fsi':([94,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA LLAVIZQ instrucciones LLAVDER','program',4,'p_program','analizador_sintaxis.py',20),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','analizador_sintaxis.py',24),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','analizador_sintaxis.py',25),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','analizador_sintaxis.py',32),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','analizador_sintaxis.py',33),
  ('instruccion -> control','instruccion',1,'p_instruccion','analizador_sintaxis.py',34),
  ('instruccion -> lectura','instruccion',1,'p_instruccion','analizador_sintaxis.py',35),
  ('instruccion -> escritura','instruccion',1,'p_instruccion','analizador_sintaxis.py',36),
  ('declaracion -> ENTERO lista_ids PUNTOCOMA','declaracion',3,'p_declaracion','analizador_sintaxis.py',40),
  ('declaracion -> FLOTANTE lista_ids PUNTOCOMA','declaracion',3,'p_declaracion','analizador_sintaxis.py',41),
  ('declaracion -> BOOLEANO lista_ids PUNTOCOMA','declaracion',3,'p_declaracion','analizador_sintaxis.py',42),
  ('expresion -> VERDADERO','expresion',1,'p_expresion_booleana','analizador_sintaxis.py',47),
  ('expresion -> FALSO','expresion',1,'p_expresion_booleana','analizador_sintaxis.py',48),
  ('instruccion -> BREAK PUNTOCOMA','instruccion',2,'p_instruccion_break','analizador_sintaxis.py',57),
  ('expresion -> NO expresion','expresion',2,'p_expresion_negacion','analizador_sintaxis.py',61),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','analizador_sintaxis.py',65),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','analizador_sintaxis.py',66),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','analizador_sintaxis.py',70),
  ('lista_ids -> lista_ids COMA ID','lista_ids',3,'p_lista_ids','analizador_sintaxis.py',75),
  ('lista_ids -> ID','lista_ids',1,'p_lista_ids','analizador_sintaxis.py',76),
  ('asignacion -> ID ASIGNACION expresion PUNTOCOMA','asignacion',4,'p_asignacion','analizador_sintaxis.py',83),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',87),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',88),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',89),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',90),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_parentesis','analizador_sintaxis.py',94),
  ('expresion -> NUMERO','expresion',1,'p_expresion_numero','analizador_sintaxis.py',98),
  ('expresion -> NUMERO_HEX','expresion',1,'p_expresion_numero','analizador_sintaxis.py',99),
  ('expresion -> ID','expresion',1,'p_expresion_id','analizador_sintaxis.py',103),
  ('control -> MIENTRAS PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','control',7,'p_control_while','analizador_sintaxis.py',107),
  ('control -> SI PARIZQ expresion PARDER THEN LLAVIZQ instrucciones LLAVDER fsi','control',9,'p_control_if','analizador_sintaxis.py',111),
  ('fsi -> FSI','fsi',1,'p_fsi','analizador_sintaxis.py',115),
  ('fsi -> SINO LLAVIZQ instrucciones LLAVDER FSI','fsi',5,'p_fsi','analizador_sintaxis.py',116),
  ('control -> HACER LLAVIZQ instrucciones LLAVDER HASTA PARIZQ expresion PARDER PUNTOCOMA','control',9,'p_control_do_until','analizador_sintaxis.py',123),
  ('lectura -> LEER ID PUNTOCOMA','lectura',3,'p_lectura','analizador_sintaxis.py',127),
  ('escritura -> ESCRIBIR ID PUNTOCOMA','escritura',3,'p_escritura','analizador_sintaxis.py',131),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',144),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',145),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',146),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',147),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',148),
  ('expresion -> expresion DISTINTO expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',149),
]
