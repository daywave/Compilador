
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALDISTINTOleftMENORMAYORMENORIGUALMAYORIGUALleftSUMARESTAleftMULTDIVrightNOAND ASIGNACION BOOLEANO BREAK COMA DISTINTO DIV ENTERO ESCRIBIR FALSO FLOTANTE FSI HACER HASTA ID IGUAL LEER LLAVDER LLAVIZQ MAYOR MAYORIGUAL MENOR MENORIGUAL MIENTRAS MULT NO NUMERO NUMERO_HEX OR PARDER PARIZQ POTENCIA PROGRAMA PUNTOCOMA RESTA SI SINO SUMA THEN VERDADEROprogram : PROGRAMA LLAVIZQ instrucciones_opt LLAVDERinstrucciones_opt : instrucciones\n                         | emptyinstrucciones : instrucciones instruccion\n                     | instruccionempty :instruccion : declaracion\n                   | asignacion\n                   | control\n                   | lectura\n                   | escrituradeclaracion : ENTERO lista_ids PUNTOCOMA\n                   | FLOTANTE lista_ids PUNTOCOMA\n                   | BOOLEANO lista_ids PUNTOCOMAasignacion : ID ASIGNACION expresion PUNTOCOMAexpresion : expresion SUMA expresion\n                 | expresion RESTA expresion\n                 | expresion MULT expresion\n                 | expresion DIV expresionexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion IGUAL expresion\n                 | expresion DISTINTO expresionexpresion : VERDADERO\n                 | FALSOexpresion : expresion AND expresion\n                 | expresion OR expresionexpresion : NO expresionexpresion : NUMERO\n                 | NUMERO_HEXexpresion : expresion POTENCIA expresioncontrol : HACER LLAVIZQ instrucciones LLAVDER HASTA PARIZQ expresion PARDER PUNTOCOMAcontrol : MIENTRAS PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERcontrol : SI PARIZQ expresion PARDER THEN LLAVIZQ instrucciones LLAVDER fsifsi : FSI\n           | SINO LLAVIZQ instrucciones LLAVDER FSIlectura : LEER ID PUNTOCOMAescritura : ESCRIBIR ID PUNTOCOMAlista_ids : lista_ids COMA ID\n                 | IDinstruccion : BREAK PUNTOCOMA'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,23,],[0,-1,]),'LLAVIZQ':([2,18,68,85,97,],[3,31,84,88,98,]),'LLAVDER':([3,4,5,6,7,8,9,10,11,12,24,25,36,38,39,46,49,50,52,87,90,91,94,95,96,99,101,],[-6,23,-2,-3,-5,-7,-8,-9,-10,-11,-4,-43,-12,-13,-14,67,-39,-40,-15,90,-35,93,-34,-36,-37,100,-38,]),'BREAK':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[13,13,-5,-7,-8,-9,-10,-11,-4,-43,13,-12,-13,-14,13,-39,-40,-15,13,13,13,-35,13,-34,-36,-37,13,13,-38,]),'ENTERO':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[14,14,-5,-7,-8,-9,-10,-11,-4,-43,14,-12,-13,-14,14,-39,-40,-15,14,14,14,-35,14,-34,-36,-37,14,14,-38,]),'FLOTANTE':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[15,15,-5,-7,-8,-9,-10,-11,-4,-43,15,-12,-13,-14,15,-39,-40,-15,15,15,15,-35,15,-34,-36,-37,15,15,-38,]),'BOOLEANO':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[16,16,-5,-7,-8,-9,-10,-11,-4,-43,16,-12,-13,-14,16,-39,-40,-15,16,16,16,-35,16,-34,-36,-37,16,16,-38,]),'ID':([3,5,7,8,9,10,11,12,14,15,16,21,22,24,25,31,36,37,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[17,17,-5,-7,-8,-9,-10,-11,27,27,27,34,35,-4,-43,17,-12,51,-13,-14,17,-39,-40,-15,17,17,17,-35,17,-34,-36,-37,17,17,-38,]),'HACER':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[18,18,-5,-7,-8,-9,-10,-11,-4,-43,18,-12,-13,-14,18,-39,-40,-15,18,18,18,-35,18,-34,-36,-37,18,18,-38,]),'MIENTRAS':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[19,19,-5,-7,-8,-9,-10,-11,-4,-43,19,-12,-13,-14,19,-39,-40,-15,19,19,19,-35,19,-34,-36,-37,19,19,-38,]),'SI':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[20,20,-5,-7,-8,-9,-10,-11,-4,-43,20,-12,-13,-14,20,-39,-40,-15,20,20,20,-35,20,-34,-36,-37,20,20,-38,]),'LEER':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[21,21,-5,-7,-8,-9,-10,-11,-4,-43,21,-12,-13,-14,21,-39,-40,-15,21,21,21,-35,21,-34,-36,-37,21,21,-38,]),'ESCRIBIR':([3,5,7,8,9,10,11,12,24,25,31,36,38,39,46,49,50,52,84,87,88,90,91,94,95,96,98,99,101,],[22,22,-5,-7,-8,-9,-10,-11,-4,-43,22,-12,-13,-14,22,-39,-40,-15,22,22,22,-35,22,-34,-36,-37,22,22,-38,]),'PUNTOCOMA':([13,26,27,28,29,34,35,40,41,42,44,45,51,66,70,71,72,73,74,75,76,77,78,79,80,81,82,92,],[25,36,-42,38,39,49,50,52,-26,-27,-31,-32,-41,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-33,94,]),'ASIGNACION':([17,],[30,]),'PARIZQ':([19,20,83,],[32,33,86,]),'COMA':([26,27,28,29,51,],[37,-42,37,37,-41,]),'VERDADERO':([30,32,33,43,53,54,55,56,57,58,59,60,61,62,63,64,65,86,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'FALSO':([30,32,33,43,53,54,55,56,57,58,59,60,61,62,63,64,65,86,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NO':([30,32,33,43,53,54,55,56,57,58,59,60,61,62,63,64,65,86,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'NUMERO':([30,32,33,43,53,54,55,56,57,58,59,60,61,62,63,64,65,86,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NUMERO_HEX':([30,32,33,43,53,54,55,56,57,58,59,60,61,62,63,64,65,86,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'SUMA':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[53,-26,-27,-31,-32,53,53,-30,-16,-17,-18,-19,53,53,53,53,53,53,53,53,53,53,]),'RESTA':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[54,-26,-27,-31,-32,54,54,-30,-16,-17,-18,-19,54,54,54,54,54,54,54,54,54,54,]),'MULT':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[55,-26,-27,-31,-32,55,55,-30,55,55,-18,-19,55,55,55,55,55,55,55,55,55,55,]),'DIV':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[56,-26,-27,-31,-32,56,56,-30,56,56,-18,-19,56,56,56,56,56,56,56,56,56,56,]),'MENOR':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[57,-26,-27,-31,-32,57,57,-30,-16,-17,-18,-19,-20,-21,-22,-23,57,57,57,57,57,57,]),'MAYOR':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[58,-26,-27,-31,-32,58,58,-30,-16,-17,-18,-19,-20,-21,-22,-23,58,58,58,58,58,58,]),'MENORIGUAL':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[59,-26,-27,-31,-32,59,59,-30,-16,-17,-18,-19,-20,-21,-22,-23,59,59,59,59,59,59,]),'MAYORIGUAL':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[60,-26,-27,-31,-32,60,60,-30,-16,-17,-18,-19,-20,-21,-22,-23,60,60,60,60,60,60,]),'IGUAL':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[61,-26,-27,-31,-32,61,61,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,61,61,61,61,]),'DISTINTO':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[62,-26,-27,-31,-32,62,62,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,62,62,62,62,]),'AND':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[63,-26,-27,-31,-32,63,63,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,63,63,63,]),'OR':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[64,-26,-27,-31,-32,64,64,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,64,64,]),'POTENCIA':([40,41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[65,-26,-27,-31,-32,65,65,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,65,65,]),'PARDER':([41,42,44,45,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,],[-26,-27,-31,-32,68,69,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-33,92,]),'HASTA':([67,],[83,]),'THEN':([69,],[85,]),'FSI':([93,100,],[96,101,]),'SINO':([93,],[97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instrucciones_opt':([3,],[4,]),'instrucciones':([3,31,84,88,98,],[5,46,87,91,99,]),'empty':([3,],[6,]),'instruccion':([3,5,31,46,84,87,88,91,98,99,],[7,24,7,24,7,24,7,24,7,24,]),'declaracion':([3,5,31,46,84,87,88,91,98,99,],[8,8,8,8,8,8,8,8,8,8,]),'asignacion':([3,5,31,46,84,87,88,91,98,99,],[9,9,9,9,9,9,9,9,9,9,]),'control':([3,5,31,46,84,87,88,91,98,99,],[10,10,10,10,10,10,10,10,10,10,]),'lectura':([3,5,31,46,84,87,88,91,98,99,],[11,11,11,11,11,11,11,11,11,11,]),'escritura':([3,5,31,46,84,87,88,91,98,99,],[12,12,12,12,12,12,12,12,12,12,]),'lista_ids':([14,15,16,],[26,28,29,]),'expresion':([30,32,33,43,53,54,55,56,57,58,59,60,61,62,63,64,65,86,],[40,47,48,66,70,71,72,73,74,75,76,77,78,79,80,81,82,89,]),'fsi':([93,],[95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA LLAVIZQ instrucciones_opt LLAVDER','program',4,'p_program','analizador_sintaxis.py',21),
  ('instrucciones_opt -> instrucciones','instrucciones_opt',1,'p_instrucciones_opt','analizador_sintaxis.py',28),
  ('instrucciones_opt -> empty','instrucciones_opt',1,'p_instrucciones_opt','analizador_sintaxis.py',29),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','analizador_sintaxis.py',33),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','analizador_sintaxis.py',34),
  ('empty -> <empty>','empty',0,'p_empty','analizador_sintaxis.py',44),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','analizador_sintaxis.py',48),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','analizador_sintaxis.py',49),
  ('instruccion -> control','instruccion',1,'p_instruccion','analizador_sintaxis.py',50),
  ('instruccion -> lectura','instruccion',1,'p_instruccion','analizador_sintaxis.py',51),
  ('instruccion -> escritura','instruccion',1,'p_instruccion','analizador_sintaxis.py',52),
  ('declaracion -> ENTERO lista_ids PUNTOCOMA','declaracion',3,'p_declaracion','analizador_sintaxis.py',56),
  ('declaracion -> FLOTANTE lista_ids PUNTOCOMA','declaracion',3,'p_declaracion','analizador_sintaxis.py',57),
  ('declaracion -> BOOLEANO lista_ids PUNTOCOMA','declaracion',3,'p_declaracion','analizador_sintaxis.py',58),
  ('asignacion -> ID ASIGNACION expresion PUNTOCOMA','asignacion',4,'p_asignacion','analizador_sintaxis.py',66),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',73),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',74),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',75),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','analizador_sintaxis.py',76),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',84),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',85),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',86),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',87),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',88),
  ('expresion -> expresion DISTINTO expresion','expresion',3,'p_expresion_comparativa','analizador_sintaxis.py',89),
  ('expresion -> VERDADERO','expresion',1,'p_expresion_booleana','analizador_sintaxis.py',110),
  ('expresion -> FALSO','expresion',1,'p_expresion_booleana','analizador_sintaxis.py',111),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','analizador_sintaxis.py',117),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','analizador_sintaxis.py',118),
  ('expresion -> NO expresion','expresion',2,'p_expresion_negacion','analizador_sintaxis.py',126),
  ('expresion -> NUMERO','expresion',1,'p_expresion_numero','analizador_sintaxis.py',132),
  ('expresion -> NUMERO_HEX','expresion',1,'p_expresion_numero','analizador_sintaxis.py',133),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','analizador_sintaxis.py',139),
  ('control -> HACER LLAVIZQ instrucciones LLAVDER HASTA PARIZQ expresion PARDER PUNTOCOMA','control',9,'p_control_do_until','analizador_sintaxis.py',147),
  ('control -> MIENTRAS PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','control',7,'p_control_while','analizador_sintaxis.py',155),
  ('control -> SI PARIZQ expresion PARDER THEN LLAVIZQ instrucciones LLAVDER fsi','control',9,'p_control_if','analizador_sintaxis.py',162),
  ('fsi -> FSI','fsi',1,'p_fsi','analizador_sintaxis.py',170),
  ('fsi -> SINO LLAVIZQ instrucciones LLAVDER FSI','fsi',5,'p_fsi','analizador_sintaxis.py',171),
  ('lectura -> LEER ID PUNTOCOMA','lectura',3,'p_lectura','analizador_sintaxis.py',181),
  ('escritura -> ESCRIBIR ID PUNTOCOMA','escritura',3,'p_escritura','analizador_sintaxis.py',187),
  ('lista_ids -> lista_ids COMA ID','lista_ids',3,'p_lista_ids','analizador_sintaxis.py',193),
  ('lista_ids -> ID','lista_ids',1,'p_lista_ids','analizador_sintaxis.py',194),
  ('instruccion -> BREAK PUNTOCOMA','instruccion',2,'p_instruccion_break','analizador_sintaxis.py',205),
]
